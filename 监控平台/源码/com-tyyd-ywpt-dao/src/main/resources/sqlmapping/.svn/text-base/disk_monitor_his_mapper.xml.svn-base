<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyyd.ywpt.dao.core.collect.disk.dataobject.DiskMonitorHisDomain" >
  <resultMap id="BaseResultMap" type="DiskMonitorHisDomain" >
    <id column="id" property="id" />
    <result column="host_id" property="hostId" />
    <result column="disk_name" property="diskName" />
    <result column="used" property="used"  />
    <result column="remain" property="remain"  />
    <result column="used_percent" property="usedPercent"  />
    <result column="gmt_created" property="gmtCreated"  />
    <result column="gmt_modifed" property="gmtModifed"  />
  </resultMap>


  <resultMap type="DiskMonitorHisDomain" id="listUnCompletedDiskResultMap" extends="listUncompletedDiskObject">
  		<result column="warn_level" property="warnLevel"/>
  </resultMap>
  
  <resultMap type="DiskMonitorHisDomain" id="BaseIdMap">
  	<result column="id" property="id" />
  </resultMap>
  
   <resultMap type="DiskMonitorHisDomain" id="listUncompletedDiskObject" extends="BaseResultMap">
  		<result column="nick_name" property="nickName" />
  		<result column="ip_addr" property="ipAddr" />
  		<result column="threshold_unit" property="thresholdUnit"/>
  		<result column="threshold_value" property="thresholdValue"/>
  		<result column="warn_quota_value" property="waringQuotaValue"/>
  		<result column="critical_quota_value" property="criticalQuotaValue"/>
  		<result column="threshold_type" property="thresholdType"/>
  </resultMap>

  <insert id="add_disk_monitor_his" parameterType="DiskMonitorDomain" >
    insert into b_disk_monitor_his (id, host_id, disk_name, 
      used, remain, used_percent, gmt_created, 
      gmt_modifed)
    values (#{id}, #{hostId}, #{diskName}, 
      #{used}, #{remain}, #{usedPercent}, now(),now() ) 
  </insert>



	<select id="list_disk_monitor_his" parameterType="java.util.Map" resultMap="BaseResultMap">
		select id, host_id, disk_name, used, remain, used_percent, gmt_created, gmt_modifed
		from b_disk_monitor_his where 
			<![CDATA[ 
	  		gmt_created >= str_to_date(#{startQueryDate},'%Y-%m-%d %H:%i:%s')  
	  			and gmt_created <= str_to_date(#{endQueryDate},'%Y-%m-%d %H:%i:%s') 
	  			and disk_name = #{diskName} 
	  			and host_id = #{hostId}
  		]]>
		
	</select>
	
	<select id="list_uncompleted_task" resultMap="listUnCompletedDiskResultMap">
		
	   SELECT t2.id,
			  t2.host_id,
			  t2.disk_name,
			  t2.used,
			  t2.remain,
			  t2.used_percent,
			  t2.gmt_created,
			  t2.gmt_modifed ,
			  t2.nick_name,
			  t2.ip_addr,
			  t2.threshold_type,
			  t2.warn_quota_value,
			  t2.critical_quota_value,
			  t2.threshold_unit , 
			  t2.threshold_value ,
			  t2.warn_flag + t2.critical_flag warn_level
	       FROM (
			 SELECT t1.*,
				CASE 
					WHEN threshold_type = 1 THEN (CASE WHEN threshold_value - warn_quota_value >0 THEN 1 ELSE 0 END)
					WHEN threshold_type = 2 THEN (CASE WHEN threshold_value - warn_quota_value >0 THEN 0 ELSE 1 END)
				ELSE 0 END warn_flag, 
				CASE 
					WHEN threshold_type = 1 THEN (CASE WHEN threshold_value - critical_quota_value >0 THEN 1 ELSE 0 END)
					WHEN threshold_type = 2 THEN (CASE WHEN threshold_value - critical_quota_value >0 THEN 0 ELSE 1 END)
				ELSE 0 END critical_flag
			 FROM (
				SELECT 
					  his.id,
					  his.host_id,
					  his.disk_name,
					  his.used,
					  his.remain,
					  his.used_percent,
					  his.gmt_created,
					  his.gmt_modifed ,
					  g.nick_name,
					  g.ip_addr,
					  b.threshold_type,
					  b.warn_quota_value,
					  b.critical_quota_value,
					   (CASE 
						WHEN b.threshold_type = 1 THEN '%'
						WHEN b.threshold_type = 2 THEN 'M'
					        ELSE '' END) threshold_unit , 
					   (CASE 
						WHEN b.threshold_type = 1 THEN his.used_percent
						WHEN b.threshold_type = 2 THEN his.remain 
					        ELSE 0 END) threshold_value  
					FROM
					  b_disk_monitor_his his ,b_disk_monitor b ,b_host_config g 
					  WHERE his.host_id = b.host_id AND his.disk_name = b.disk_name 
					  AND b.host_id = g.host_id 
					  AND his.is_completed = 'N' 
					  AND b.threshold_type > 0
					  AND his.gmt_created > DATE_ADD(now(),INTERVAL -1 DAY)
				) t1 	  
			 ) t2 WHERE warn_flag = 1 OR critical_flag = 1 		
			  ORDER BY gmt_created LIMIT 200 
	</select>
	

	<update id="close_normal_uncompleted_task" >
		update b_disk_monitor_his set is_completed = 'Y' where id in (
			SELECT t2.id
	       FROM (
			 SELECT t1.*,
				CASE 
					WHEN threshold_type = 1 THEN (CASE WHEN threshold_value - warn_quota_value >0 THEN 1 ELSE 0 END)
					WHEN threshold_type = 2 THEN (CASE WHEN threshold_value - warn_quota_value >0 THEN 0 ELSE 1 END)
				ELSE 0 END warn_flag, 
				CASE 
					WHEN threshold_type = 1 THEN (CASE WHEN threshold_value - critical_quota_value >0 THEN 1 ELSE 0 END)
					WHEN threshold_type = 2 THEN (CASE WHEN threshold_value - critical_quota_value >0 THEN 0 ELSE 1 END)
				ELSE 0 END critical_flag
			 FROM (
				SELECT 
					  his.id,
					  his.host_id,
					  his.disk_name,
					  his.used,
					  his.remain,
					  his.used_percent,
					  his.gmt_created,
					  his.gmt_modifed ,
					  g.nick_name,
					  g.ip_addr,
					  b.threshold_type,
					  b.warn_quota_value,
					  b.critical_quota_value,
					   (CASE 
						WHEN b.threshold_type = 1 THEN '%'
						WHEN b.threshold_type = 2 THEN 'M'
					        ELSE '' END) threshold_unit , 
					   (CASE 
						WHEN b.threshold_type = 1 THEN his.used_percent
						WHEN b.threshold_type = 2 THEN his.remain 
					        ELSE 0 END) threshold_value  
					FROM
					  b_disk_monitor_his his ,b_disk_monitor b ,b_host_config g 
					  WHERE his.host_id = b.host_id AND his.disk_name = b.disk_name 
					  AND b.host_id = g.host_id 
					  AND his.is_completed = 'N' 
					  AND b.threshold_type > 0
					  AND his.gmt_created > DATE_ADD(now(),INTERVAL -1 DAY)
					  
				) t1 	  
			 ) t2 WHERE warn_flag = 0 and critical_flag = 0 	
		)
	</update>
	
	
	<select id="list_disk_monitor_uncompleted_limit_id" resultMap="BaseIdMap">
		select his.id from b_disk_monitor_his his 
			where his.is_completed = 'N' 
				AND his.gmt_created > DATE_ADD(now(),INTERVAL -1 DAY)
			order by his.gmt_created limit 1000	
	
	</select>

	<select id="get_disk_monitor_uncompleted_obj" parameterType="java.lang.String" resultMap="listUncompletedDiskObject">
	
		SELECT 
		  his.id,
		  his.host_id,
		  his.disk_name,
		  his.used,
		  his.remain,
		  his.used_percent,
		  his.gmt_created,
		  his.gmt_modifed ,
		  g.nick_name,
		  g.ip_addr,
		  b.threshold_type,
		  b.warn_quota_value,
		  b.critical_quota_value,
		   (CASE 
			WHEN b.threshold_type = 1 THEN '%'
			WHEN b.threshold_type = 2 THEN 'M'
		        ELSE '' END) threshold_unit , 
		   (CASE 
			WHEN b.threshold_type = 1 THEN his.used_percent
			WHEN b.threshold_type = 2 THEN his.remain 
		        ELSE 0 END) threshold_value  
		FROM
		  b_disk_monitor_his his ,b_disk_monitor b ,b_host_config g 
		  WHERE his.host_id = b.host_id AND his.disk_name = b.disk_name 
		  AND b.host_id = g.host_id 
		  AND his.is_completed = 'N' 
		  and his.id = #{id}
	</select>


	<update id="close_no_monitor_task" >
		UPDATE b_disk_monitor_his SET is_completed = 'Y' WHERE id IN 
		  (SELECT id FROM
		    (SELECT  his.id  FROM
		      b_disk_monitor_his his,
		      b_disk_monitor b 
		    WHERE his.host_id = b.host_id 
		      AND his.disk_name = b.disk_name 
		      AND his.is_completed = 'N' 
		      AND b.threshold_type = 0
		      AND his.gmt_created > DATE_ADD(now(),INTERVAL -1 DAY)
		    ) t    
		  )
	
	</update>

	<update id="close_uncompleted_task_by_id" parameterType="java.lang.String">
		update b_disk_monitor_his set is_completed = 'Y' where id = #{id}
	</update>
	
	<update id="close_expired_disk_data" >
		UPDATE b_disk_monitor_his SET is_completed = 'Y' WHERE id IN (
		  SELECT id FROM (SELECT id FROM
		      b_disk_monitor_his his
		    WHERE his.is_completed = 'N' 
		      AND his.gmt_created <![CDATA[ <=  ]]> DATE_ADD(now(),INTERVAL -1 DAY)
		    ) t   ) 
	</update>
	
	
	<select id="get_max_snap_gmt_date" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT MAX(gmt_created) FROM b_biz_snap 
			WHERE monitor_id = #{hostId} 
				AND config_type=1
				AND biz_type=1
	</select>
	
	<select id="get_max_snap_id" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT snap_id FROM b_biz_snap 
			WHERE monitor_id = #{hostId} 
				AND config_type=1
				AND biz_type=1 
				AND gmt_created=#{gmtCreated}
	</select>
	
	
	
	<select id="list_last_disk_monitor" parameterType="java.util.Map" resultMap="BaseResultMap">
		select id, host_id, disk_name, used, remain, used_percent, gmt_created, gmt_modifed
		from b_disk_monitor_his where   host_id = #{hostId} and snap_id = #{snapId}
		
	</select>

</mapper>