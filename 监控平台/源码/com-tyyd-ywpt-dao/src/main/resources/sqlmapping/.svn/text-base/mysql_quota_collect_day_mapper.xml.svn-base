<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyyd.ywpt.dao.core.collect.even.mysql.dataobject.MysqlQuotaCollectDayDomain" >
  <resultMap id="BaseResultMap" type="MysqlQuotaCollectDayDomain" >
    <id column="id" property="id"  />
    <result column="host_id" property="hostId"  />
    <result column="db_id" property="dbId"  />
    <result column="quota_id" property="quotaId"  />
    <result column="quota_name" property="quotaName"  />
    <result column="quota_value" property="quotaValue"  />
    <result column="last_quota_value" property="lastQuotaValue"/>
    <result column="gmt_created" property="gmtCreated" />
    <result column="gmt_modifed" property="gmtModifed" />
  </resultMap>
  
  
  <resultMap type="MysqlQuotaCollectDayDomain" id="listUnCompletedMySQLResultMap" extends="listUnCompletedMysqlObject">
  		<result column="warn_level" property="warnLevel"/>
  </resultMap>
  
  <resultMap id="listReportResultMap" type="MysqlQuotaCollectDayDomain" >
    <result column="quota_value" property="quotaValue"  />
    <result column="gmt_created" property="gmtCreatedTimeStamp" />
    <result column="id" property="id"  />
  </resultMap>
  
  
  <resultMap type="MysqlQuotaCollectDayDomain" id="BaseIdMap" >
    	<result column="id" property="id" />
  </resultMap>
  
  
  <resultMap type="MysqlQuotaCollectDayDomain" id="listUnCompletedMysqlObject" extends="BaseResultMap">
  		<result column="nick_name" property="nickName" />
  		<result column="ip_addr" property="ipAddr" />
  		<result column="port" property="port"/>
  		<result column="quota_metric" property="quotaMetric" />
  		<result column="warn_quota_value" property="waringQuotaValue"/>
  		<result column="critical_quota_value" property="criticalQuotaValue"/>
  		<result column="threshold_type" property="thresholdType"/>
  </resultMap>
  
   <insert id="add_mysql_quota_collect_day" parameterType="MysqlQuotaCollectDayDomain" >
    insert into b_mysql_quota_collect_day (id, host_id, db_id, 
      quota_id, quota_name, quota_value, last_quota_value,
      gmt_created, gmt_modifed)
    values (#{id}, #{hostId}, #{dbId}, 
      #{quotaId}, #{quotaName}, #{quotaValue}, #{lastQuotaValue},
      now(), now())
  </insert>
  
  
  
  <select id="list_mysql_quota_collect_day" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select id, host_id, db_id, quota_id, quota_name, quota_value, last_quota_value,gmt_created, gmt_modifed 
    	from b_mysql_quota_collect_day where 
    	<![CDATA[ 
	  		gmt_created >= str_to_date(#{startCreatedDate},'%Y-%m-%d %H:%i:%s')  
	  			and gmt_created <= str_to_date(#{endCreatedDate},'%Y-%m-%d %H:%i:%s') 
	  			and host_id = #{hostId}
	  			and quota_id = #{quotaId}
	  			and db_id = #{dbId}
  		]]>
  </select>
  
  
    <select id="get_last_mysql_quota_collect" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select id, host_id, db_id, quota_id, quota_name, quota_value, last_quota_value,gmt_created, gmt_modifed 
    	from b_mysql_quota_collect_day where 
	  			 host_id = #{hostId}
	  			and quota_id = #{quotaId}
	  			and db_id = #{dbId}
	  			order by  gmt_created desc limit 0,1
  </select>
  
  
  <select id="list_uncompleted_mysql_quota_collect_data" resultMap="listUnCompletedMySQLResultMap">
  	 SELECT t1.id, 
			t1.host_id, 
			t1.db_id,
			t1.quota_id, 
			t1.quota_name, 
			t1.quota_value,
			t1.warn_quota_value ,
			t1.critical_quota_value,
			t1.threshold_type,
			t1.last_quota_value, 
			t1.gmt_created, 
			t1.gmt_modifed,
			t1.nick_name,
			t1.ip_addr,
			t1.quota_metric,
			t1.port,
			t1.warn_flag + t1.critical_flag warn_level
				
		FROM (
		SELECT t.*,
			CASE WHEN (CASE 
					WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.warn_quota_value			
					WHEN t.threshold_type = 3 THEN t.warn_quota_value - t.quota_value
				ELSE 0 END ) > 0 THEN 1 ELSE 0 END warn_flag,
			CASE WHEN (CASE 
					WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.critical_quota_value			
					WHEN t.threshold_type = 3 THEN t.critical_quota_value - t.quota_value
				ELSE 0 END ) > 0 THEN 1 ELSE 0 END critical_flag
				
		 FROM (	
			SELECT  d.id, 
				d.host_id, 
				d.db_id,
				d.quota_id, 
				d.quota_name, 
				CASE 
					WHEN t.threshold_type = 1 THEN d.quota_value
					WHEN t.threshold_type = 2 THEN (d.quota_value - d.last_quota_value )/(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date))
					WHEN t.threshold_type = 3 THEN d.quota_value
				ELSE 0 END quota_value,
				t.warn_quota_value ,
				t.critical_quota_value,
				t.threshold_type,
				d.last_quota_value, 
				d.gmt_created, 
				d.gmt_modifed,
				h.nick_name,
				h.ip_addr,
				t.quota_metric,
				g.port 
			FROM b_mysql_quota_collect_day d,b_host_config h,b_threshold t,b_db_config g 
			WHERE d.db_id = g.db_id AND g.db_id = t.monitor_id AND h.host_id = g.host_id
			AND t.config_type = 3 AND d.quota_id = t.quota_id 
		<![CDATA[	AND d.is_completed = 'N' AND t.status = '0' AND d.last_quota_value >= 0  ]]>
			
			) t 
			) t1 WHERE t1.warn_flag = 1 or critical_flag = 1 
			ORDER BY t1.gmt_created LIMIT 200 
  	
  
  </select>
  
  
  <update id="close_normal_uncompleted_task">
  	update b_mysql_quota_collect_day SET is_completed = 'Y' where id in (
		  	SELECT t1.id
		FROM (
		SELECT t.*,
			CASE WHEN (CASE 
					WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.warn_quota_value			
					WHEN t.threshold_type = 3 THEN t.warn_quota_value - t.quota_value
				ELSE 0 END ) > 0 THEN 1 ELSE 0 END warn_flag,
			CASE WHEN (CASE 
					WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.critical_quota_value			
					WHEN t.threshold_type = 3 THEN t.critical_quota_value - t.quota_value
				ELSE 0 END ) > 0 THEN 1 ELSE 0 END critical_flag
				
		 FROM (	
			SELECT  d.id, 
				d.host_id, 
				d.db_id,
				d.quota_id, 
				d.quota_name, 
				CASE 
					WHEN t.threshold_type = 1 THEN d.quota_value
					WHEN t.threshold_type = 2 THEN (d.quota_value - d.last_quota_value )/(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date))
					WHEN t.threshold_type = 3 THEN d.quota_value
				ELSE 0 END quota_value,
				t.warn_quota_value ,
				t.critical_quota_value,
				t.threshold_type,
				d.last_quota_value, 
				d.gmt_created, 
				d.gmt_modifed,
				h.nick_name,
				h.ip_addr,
				t.quota_metric,
				g.port 
			FROM b_mysql_quota_collect_day d,b_host_config h,b_threshold t,b_db_config g 
			WHERE d.db_id = g.db_id AND g.db_id = t.monitor_id AND h.host_id = g.host_id
			AND t.config_type = 3 AND d.quota_id = t.quota_id 
		<![CDATA[	AND d.is_completed = 'N' AND t.status = '0' AND d.last_quota_value >= 0 ]]>
			
			) t 
			) t1 WHERE t1.warn_flag = 0 AND critical_flag = 0 
  	) AND is_completed = 'N'
  </update>
  
  
  <select id="list_mysql_monitor_uncompleted_limit_id" resultMap="BaseIdMap">
  		select his.id from b_mysql_quota_collect_day his 
			where his.is_completed = 'N' 
				AND his.gmt_created > DATE_ADD(now(),INTERVAL -1 DAY)
			order by his.gmt_created limit 1000	
  	</select>
  
  
  <select id="get_mysql_monitor_uncompleted_obj" parameterType="java.lang.String" resultMap="listUnCompletedMysqlObject">
  
  		SELECT  d.id, 
				d.host_id, 
				d.db_id,
				d.quota_id, 
				d.quota_name, 
				CASE 
					WHEN t.threshold_type = 1 THEN d.quota_value
					WHEN t.threshold_type = 2 THEN (d.quota_value - d.last_quota_value )/(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date))
					WHEN t.threshold_type = 3 THEN d.quota_value
				ELSE 0 END quota_value,
				t.warn_quota_value ,
				t.critical_quota_value,
				t.threshold_type,
				d.last_quota_value, 
				d.gmt_created, 
				d.gmt_modifed,
				h.nick_name,
				h.ip_addr,
				t.quota_metric,
				g.port 
			FROM b_mysql_quota_collect_day d,b_host_config h,b_threshold t,b_db_config g 
			WHERE d.db_id = g.db_id AND g.db_id = t.monitor_id AND h.host_id = g.host_id
			AND t.config_type = 3 AND d.quota_id = t.quota_id 
		<![CDATA[	AND d.is_completed = 'N' AND t.status = '0' AND d.last_quota_value >= 0 ]]>
			and d.id = #{id}
  
  </select>
  
  
  <update id="close_uncompleted_quota_mysql_collect_data_by_id" parameterType="java.lang.String">
  	update b_mysql_quota_collect_day SET is_completed = 'Y' where id = #{id}
  </update>
  
  
  <delete id="del_his_data" parameterType="java.util.Map">
  		delete from b_mysql_quota_collect_day 
  			where gmt_created  <![CDATA[ <  ]]>  str_to_date(#{gmtCreatedDate},'%Y-%m-%d') 
  </delete>
  
  <select id="list_report_data" parameterType="java.util.Map" resultMap="listReportResultMap">
  	select * from (
  	SELECT 
		ROUND(CASE 
		    WHEN m.cal_type = 2 THEN (d.quota_value - d.last_quota_value) /(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date))
		ELSE d.quota_value END,2) quota_value,
		UNIX_TIMESTAMP(DATE_FORMAT(d.gmt_created,'%Y-%m-%d %H:%i')) gmt_created,
		d.id
	 FROM b_mysql_quota_collect_day d, b_quota_model m
	WHERE d.quota_id = m.id 
		AND d.quota_id= #{quotaId} 
		and d.db_id = #{dbId} 
		<![CDATA[	
		and d.last_quota_value >= 0 ]]>
		<if test="startDate != null and startDate!='' ">
			and d.gmt_created >= str_to_date(#{startDate},'%Y-%m-%d %H:%i:%s') 
		</if>
		<if test="endDate != null and endDate!='' ">
		<![CDATA[	and d.gmt_created <= str_to_date(#{endDate},'%Y-%m-%d %H:%i:%s') ]]>
		</if>
		
	order by d.gmt_created desc LIMIT ${pageSize} ) x order by gmt_created asc
  </select>
  
  
  <select id="list_complex_quota_report_data" parameterType="java.util.Map" resultMap="listReportResultMap">
  	select * from (
 	select sum(quota_value) quota_value,gmt_created from (
	  	SELECT 
			ROUND(CASE 
			    WHEN m.cal_type = 2 THEN (d.quota_value - d.last_quota_value) /(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date))
			ELSE d.quota_value END,2) quota_value,
			UNIX_TIMESTAMP(DATE_FORMAT(d.gmt_created,'%Y-%m-%d %H:%i'))  gmt_created
		 FROM b_mysql_quota_collect_day d, b_quota_model m
		WHERE d.quota_id = m.id 
			AND d.quota_id in 
			<foreach item="quotaId" index="index" collection="quotaId" open="(" separator="," close=")">  
			 #{quotaId}
			</foreach> 
		<![CDATA[	
			and d.last_quota_value >= 0 ]]>
			<if test="startDate != null and startDate!='' ">
				and d.gmt_created >= str_to_date(#{startDate},'%Y-%m-%d %H:%i:%s') 
			</if>
			<if test="endDate != null and endDate!='' ">
			<![CDATA[		and d.gmt_created <= str_to_date(#{endDate},'%Y-%m-%d %H:%i:%s') ]]>
			</if>
		
			and d.db_id = #{dbId} 
		) t group by t.gmt_created 
	order by t.gmt_created desc limit ${pageSize} ) x order by gmt_created asc
  </select>
  
  
  
   <select id="list_hits_quota_data" parameterType="java.util.Map" resultMap="listReportResultMap">
   	select * from (
 		SELECT 
		  ROUND(100 * (logicread.quota_value / total.quota_value),2) quota_value,
		  logicread.gmt_created 
		FROM
		  (SELECT 
		    ROUND((d.quota_value - d.last_quota_value) /(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date)),2) quota_value, 
		    UNIX_TIMESTAMP(d.gmt_created) gmt_created 
		  FROM
		    b_mysql_quota_collect_day d 
		  WHERE d.quota_id = '44'  AND d.db_id = #{dbId} ) logicread,
		  (SELECT 
		    SUM(quota_value) quota_value,
		    gmt_created 
		  FROM
		    (SELECT 
		      ROUND((d.quota_value - d.last_quota_value) /(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_date)),2) quota_value,
		      UNIX_TIMESTAMP(d.gmt_created) gmt_created 
		    FROM
		      b_mysql_quota_collect_day d 
		    WHERE d.quota_id IN ('44', '45')   AND d.db_id = #{dbId} 
		  	 
		    <if test="startDate != null and startDate!='' ">
				and d.gmt_created >= str_to_date(#{startDate},'%Y-%m-%d %H:%i:%s') 
			</if>
			<if test="endDate != null and endDate!='' ">
			<![CDATA[		and d.gmt_created <= str_to_date(#{endDate},'%Y-%m-%d %H:%i:%s')  ]]>
			</if>
		   
		    ) t 
		  GROUP BY t.gmt_created ) total 
		WHERE logicread.gmt_created = total.gmt_created
		 order by logicread.gmt_created desc LIMIT ${pageSize}  ) x order by gmt_created asc
  </select>
  
  
  	<update id="close_no_threshold_task">
		UPDATE b_mysql_quota_collect_day SET is_completed = 'Y' WHERE id IN (
			SELECT id FROM (
				SELECT * FROM b_mysql_quota_collect_day m WHERE NOT EXISTS (
					SELECT 1 FROM b_threshold t  WHERE t.quota_id = m.quota_id AND t.monitor_id = m.db_id AND t.config_type=3
			) AND is_completed = 'N' LIMIT 10000) t 
		)
  	</update>
  	
  	
  	<select id="get_no_cal_quota_value" parameterType="java.util.Map" resultType="java.lang.Float">
  		SELECT quota_value FROM b_mysql_quota_collect_day WHERE quota_id = #{quotaId} AND db_id = #{dbId} ORDER BY gmt_created DESC LIMIT 1
  	</select>
  	
  	
  	<select id="get_need_cal_quota_value" parameterType="java.util.Map" resultType="java.lang.Float">
  		SELECT ROUND((quota_value-last_quota_value)/(UNIX_TIMESTAMP(gmt_created)- UNIX_TIMESTAMP(last_quota_date)),2) quota_value FROM (
			SELECT * FROM `b_mysql_quota_collect_day` WHERE quota_id = #{quotaId} AND db_id = #{dbId} ORDER BY gmt_created DESC LIMIT 1
			) t
  	</select>
  
  
  
  	  <select id="get_mysql_monitor_data_by_id" parameterType="java.lang.String" resultMap="BaseResultMap">
  		 	select id, host_id, db_id, quota_id, quota_name, quota_value,last_quota_value, gmt_created, gmt_modifed 
   			 	from b_mysql_quota_collect_day where id = #{id}
   
  	</select>
  
</mapper>