<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyyd.ywpt.dao.stat.oracle.dataobject.snap.OracleSnapActiceSessionDomain" >
  <resultMap id="snapTopSQLResultMap" type="OracleSnapTopSQLDomain" >
    	<result column="sql_id" property="sqlId"  />
    	<result column="fetches_delta" property="fetchesDelta" />
    	<result column="sorts_delta" property="sortsDelta" />
    	<result column="executions_delta" property="executionsDelta" />
    	<result column="parse_calls_delta" property="parseCallsDelta" />
    	<result column="disk_reads_delta" property="diskReadsDelta" />
    	<result column="buffer_gets_delta" property="bufferGetsDelta" />
    	<result column="rows_processed_delta" property="rowsProcessedDelta" />
    	<result column="cpu_time_delta" property="cpuTimeDelta" />
    	<result column="elapsed_time_delta" property="elapsedTimeDelta" />
    	<result column="iowait_delta" property="iowaitDelta" />
    	<result column="clwait_delta" property="clwaitDelta" />
    	<result column="apwait_delta" property="apwaitDelta" />
    	<result column="ccwait_delta" property="ccwaitDelta" />
  </resultMap>
  
  <resultMap id="snapActiceSessionResultMap" type="OracleSnapActiceSessionDomain" >
    	<result column="sql_id" property="sqlId"  />
    	<result column="session_state" property="sessionState" />
    	<result column="event" property="event" />
    	<result column="counts" property="counts" />
  </resultMap>
  

  <resultMap id="snapWaitEventResultMap" type="OracleSnapWaitEventDomain" >
    	<result column="wait_class" property="waitClass"  />
    	<result column="waits" property="waits" />
    	<result column="timeouts" property="timeouts" />
    	<result column="time_sec" property="waitTime" />
  </resultMap>
  	
	
  <resultMap id="snapEventClassDetailResultMap" type="OracleSnapEventClassDetailDomain" >
    	<result column="event_name" property="eventName"  />
    	<result column="waits" property="waits" />
    	<result column="timeouts" property="timeouts" />
    	<result column="time_sec" property="waitTime" />
  </resultMap>
    
    
   	
  <resultMap id="snapEventSQLResultMap" type="OracleSnapEventSQLDomain" >
    	<result column="sample_time" property="sampleTime"  />
    	<result column="sql_id" property="sqlId" />
    	<result column="program" property="program" />
  </resultMap>
    
    
    
  <resultMap type="OracleSnapShotDomain" id="oracleSnapShotResultMap">
  
  		<result column="SNAP_ID" property="snapId"  />
    	<result column="DBID" property="dbId" />
    	<result column="INSTANCE_NUMBER" property="instanceId" />
    	<result column="STARTUP_TIME" property="startupTime"  />
    	<result column="BEGIN_INTERVAL_TIME" property="beginIntervalTime" />
    	<result column="END_INTERVAL_TIME" property="endIntervalTime" />
  		<result column="FLUSH_ELAPSED" property="flushElapsed"  />
    	<result column="SNAP_LEVEL" property="snapLevel" />
    	<result column="ERROR_COUNT" property="errorCount" />
  </resultMap>  
    
     
  <select id="list_top_sql" parameterType="java.util.Map" resultMap="snapTopSQLResultMap">
  	
  	
  		select * from (
	  	SELECT 
		  sql_id,
		  fetches_delta, 
		  sorts_delta,
		  executions_delta,
		  parse_calls_delta,
		  disk_reads_delta,
		  buffer_gets_delta,
		  rows_processed_delta,
		  cpu_time_delta/1000000 cpu_time_delta,
		  elapsed_time_delta/1000000 elapsed_time_delta,
		  iowait_delta/1000000 iowait_delta,
		  clwait_delta/1000000 clwait_delta,
		  apwait_delta/1000000 apwait_delta,
		  ccwait_delta/1000000 ccwait_delta 
		FROM
		  dba_hist_sqlstat
		WHERE snap_id = #{snapId} 
		  AND dbid = #{dataBaseId} 
		  AND instance_number = #{instanceId}
		) t 
		 <if test="sortColumn == ''">
	    	ORDER BY disk_reads_delta DESC 
	    </if>
	    
	    <if test="sortColumn != ''">
	    	ORDER BY ${sortColumn} ${sortType} 
	    </if>
		 
		LIMIT 20 
  
  </select>
  
  
  <select id="get_sql_text_by_id" parameterType="java.util.Map" resultType="java.lang.String">
  		SELECT sql_text FROM dba_hist_sqltext 
  			WHERE dbid=#{dataBaseId} 
  				AND sql_id=#{sqlId}
  </select>
  
  
  <select id="list_actice_session" parameterType="java.util.Map" resultMap="snapActiceSessionResultMap">
  		SELECT  sql_id,
  				session_state,
  				event,
  				COUNT(*) counts
  			FROM  dba_hist_active_sess_history
			 WHERE dbid=#{dataBaseId}  AND snap_id=#{snapId}  AND instance_number=#{instanceId}
			   AND sql_id IS NOT NULL
			 GROUP BY sql_id,session_state,event
			 ORDER BY COUNT(*) DESC 
  </select>
  
  
  <select id="total_wait_event" parameterType="java.util.Map" resultMap="snapWaitEventResultMap">
  		
  		SELECT  b.wait_class,
  				b.waits-a.waits waits ,
  				b.timeouts-a.timeouts timeouts,
  				b.time_sec-a.time_sec time_sec
			 FROM 
			 (SELECT wait_class,SUM(total_waits) waits,SUM(total_timeouts) timeouts,SUM(time_waited_micro)/1000000 time_sec FROM dba_hist_system_event
			  WHERE dbid=#{dataBaseId}  AND snap_id=#{lastSnapId}  AND instance_number=#{instanceId}
			  GROUP BY wait_class) a,
			  (SELECT wait_class,SUM(total_waits) waits,SUM(total_timeouts) timeouts,SUM(time_waited_micro)/1000000 time_sec FROM dba_hist_system_event
			  WHERE dbid=#{dataBaseId}  AND snap_id=#{snapId}  AND instance_number=#{instanceId}
			  GROUP BY wait_class) b
			  WHERE b.wait_class=a.wait_class
			  ORDER BY time_sec DESC 
  		
  </select>
  
  
  <select id="load_event_by_class" parameterType="java.util.Map" resultMap="snapEventClassDetailResultMap">
  		SELECT  b.event_name, 
  				b.waits-a.waits waits,
  				b.timeouts-a.timeouts timeouts,
  				b.time_sec-a.time_sec time_sec
		FROM  
		(  SELECT  event_name,total_waits waits,total_timeouts timeouts,time_waited_micro/1000000 time_sec FROM dba_hist_system_event 
		   WHERE dbid=#{dataBaseId}  AND snap_id=#{lastSnapId}  AND instance_number=#{instanceId}
		   AND wait_class=#{waitClass}) a,  
		 ( SELECT  event_name,total_waits waits,total_timeouts timeouts,time_waited_micro/1000000 time_sec FROM dba_hist_system_event 
		   WHERE dbid=#{dataBaseId}  AND snap_id=#{snapId}  AND instance_number=#{instanceId}
		   AND wait_class=#{waitClass}) b
		   WHERE b.event_name=a.event_name
		   ORDER BY time_sec DESC 
  </select>
  
  
  
  <select id="load_event_sql" parameterType="java.util.Map" resultMap="snapEventSQLResultMap">
  		SELECT  sample_time,
  				sql_id,
  				program  
  			FROM dba_hist_active_sess_history
		 WHERE dbid=#{dataBaseId}  AND snap_id=#{snapId}  AND instance_number=#{instanceId}
		   AND sql_id IS NOT NULL
		   AND event=#{eventName}
  </select>
  
  
  <select id="get_oracle_snap_shot" parameterType="java.util.Map" resultMap="oracleSnapShotResultMap">
  	
  		select 
  			SNAP_ID  			,
			DBID  				,
			INSTANCE_NUMBER 	,
			STARTUP_TIME  		,
			BEGIN_INTERVAL_TIME  ,
			END_INTERVAL_TIME 	 ,
			FLUSH_ELAPSED 		,
			SNAP_LEVEL 			,
			ERROR_COUNT 		
		from dba_hist_snapshot 
			where DBID = #{dbId} 
				AND instance_number=#{instanceId}
			<![CDATA[
				AND BEGIN_INTERVAL_TIME <= str_to_date(#{quotaTime},'%Y-%m-%d %H:%i:%s')
  				AND END_INTERVAL_TIME >= str_to_date(#{quotaTime},'%Y-%m-%d %H:%i:%s') 
  			]]> 
  			limit 1
  </select>
  
  
  <select id="last_oracle_snap_shot" parameterType="java.util.Map" resultMap="oracleSnapShotResultMap">
  	
  		select 
  			SNAP_ID  			,
			DBID  				,
			INSTANCE_NUMBER 	,
			STARTUP_TIME  		,
			BEGIN_INTERVAL_TIME  ,
			END_INTERVAL_TIME 	 ,
			FLUSH_ELAPSED 		,
			SNAP_LEVEL 			,
			ERROR_COUNT 		
		from dba_hist_snapshot 
			where DBID = #{dbId} 
				AND instance_number=#{instanceId}
		<![CDATA[		AND SNAP_ID < #{snapId}   ]]>
			order by SNAP_ID desc limit 1
  </select>
  
</mapper>  