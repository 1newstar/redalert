<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyyd.ywpt.dao.core.collect.even.host.dataobject.HostQuotaCollectDayDomain" >
  <resultMap id="BaseResultMap" type="HostQuotaCollectDayDomain" >
    <id column="id" property="id" />
    <result column="host_id" property="hostId" />
    <result column="quota_id" property="quotaId" />
    <result column="quota_name" property="quotaName" />
    <result column="quota_value" property="quotaValue"  />
    <result column="last_quota_value" property="lastQuotaValue"/>
    <result column="gmt_created" property="gmtCreated" />
    <result column="gmt_modifed" property="gmtModifed" />
  </resultMap>
  
  <resultMap type="HostQuotaCollectDayDomain" id="listUnCompletedResultMap" extends="listUncompletedDiskObject">
  		<result column="warn_level" property="warnLevel"/>
  </resultMap>
  
  
  <resultMap type="HostQuotaCollectDayDomain" id="listReportResultMap" >
  		<result column="quota_value" property="quotaValue"  />
    	<result column="gmt_created" property="gmtCreatedTimeStamp" />
    	<result column="id" property="id" />
  </resultMap>
  
   <resultMap type="HostQuotaCollectDayDomain" id="BaseIdMap" >
    	<result column="id" property="id" />
  </resultMap>
  
  
   <resultMap type="HostQuotaCollectDayDomain" id="listUncompletedDiskObject" extends="BaseResultMap">
  		<result column="nick_name" property="nickName" />
  		<result column="ip_addr" property="ipAddr" />
  		<result column="quota_metric" property="quotaMetric" />
  		<result column="warn_quota_value" property="waringQuotaValue"/>
  		<result column="critical_quota_value" property="criticalQuotaValue"/>
  		<result column="threshold_type" property="thresholdType"/>
  </resultMap>
  
    <insert id="add_host_quota_collect_day" parameterType="HostQuotaCollectDayDomain" >
    insert into b_host_quota_collect_day (id, host_id, quota_id, 
      quota_name, quota_value,last_quota_value, gmt_created, 
      gmt_modifed)
    values (#{id}, #{hostId}, #{quotaId}, 
      #{quotaName}, #{quotaValue},#{lastQuotaValue}, now(), 
      now())
  </insert>
  
  
  <select id="list_host_quota_collect_day" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select id, host_id, quota_id, quota_name, quota_value,last_quota_value, gmt_created, gmt_modifed
  		from b_host_quota_collect_day where 
  		<![CDATA[ 
	  		gmt_created >= str_to_date(#{startCreatedDate},'%Y-%m-%d %H:%i:%s')  
	  			and gmt_created <= str_to_date(#{endCreatedDate},'%Y-%m-%d %H:%i:%s') 
	  			and host_id = #{hostId}
	  			and quota_id = #{quotaId}
  		]]>
  </select>
  
  
    <select id="get_last_host_quota_collect" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select id, host_id, quota_id, quota_name, quota_value,last_quota_value, gmt_created, gmt_modifed
  		from b_host_quota_collect_day 
  		where host_id = #{hostId}
	  			and quota_id = #{quotaId}
	  	order by gmt_created desc limit 0,1
  </select>
  
  
  <select id="list_uncompleted_quota_collect_data" resultMap="listUnCompletedResultMap">
  	 SELECT t1.id, 
			t1.host_id, 
			t1.quota_id, 
			t1.quota_name, 
			t1.quota_value,
			t1.last_quota_value, 
			t1.gmt_created, 
			t1.gmt_modifed,
			t1.nick_name,
			t1.ip_addr,
			t1.quota_metric,
			t1.warn_quota_value ,
			t1.critical_quota_value,
			t1.threshold_type,
			t1.warn_flag + t1.critical_flag warn_level
		FROM (
				SELECT t.*,
					CASE WHEN (CASE 
							WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.warn_quota_value			
							WHEN t.threshold_type = 3 THEN t.warn_quota_value - t.quota_value
						ELSE 0 END ) > 0 THEN 1 ELSE 0 END warn_flag,
					CASE WHEN (CASE 
							WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.critical_quota_value			
							WHEN t.threshold_type = 3 THEN t.critical_quota_value - t.quota_value
						ELSE 0 END ) > 0 THEN 1 ELSE 0 END critical_flag
						
				FROM (		
					SELECT  d.id, 
						d.host_id, 
						d.quota_id, 
						d.quota_name, 
						CASE 
							WHEN t.threshold_type = 1 THEN d.quota_value
							WHEN t.threshold_type = 2 THEN (d.quota_value - d.last_quota_value )/(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_time))
							WHEN t.threshold_type = 3 THEN d.quota_value
						ELSE 0 END quota_value,
						d.last_quota_value, 
						d.gmt_created, 
						d.gmt_modifed,
						h.nick_name,
						h.ip_addr,
						t.quota_metric,
						t.warn_quota_value ,
						t.critical_quota_value,
						t.threshold_type
					FROM b_host_quota_collect_day d,b_host_config h,b_threshold t
					WHERE d.host_id = h.host_id AND h.host_id = t.monitor_id 
					AND t.config_type = 1 AND d.quota_id = t.quota_id 
				<![CDATA[	AND d.is_completed = 'N' AND t.status = '0' AND d.last_quota_value >= 0 ]]>
					) t 
			) t1  WHERE t1.warn_flag = 1 OR critical_flag = 1 				  		
		 ORDER BY gmt_created LIMIT 200 
	
		  		
  </select>
  
  
  <update id="close_normal_uncompleted_task">
  	  	UPDATE b_host_quota_collect_day b SET is_completed = 'Y' WHERE b.id IN (
			SELECT t1.id
				FROM (
						SELECT t.*,
							CASE WHEN (CASE 
									WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.warn_quota_value			
									WHEN t.threshold_type = 3 THEN t.warn_quota_value - t.quota_value
								ELSE 0 END ) > 0 THEN 1 ELSE 0 END warn_flag,
							CASE WHEN (CASE 
									WHEN t.threshold_type = 1 OR t.threshold_type = 2 THEN t.quota_value - t.critical_quota_value			
									WHEN t.threshold_type = 3 THEN t.critical_quota_value - t.quota_value
								ELSE 0 END ) > 0 THEN 1 ELSE 0 END critical_flag
								
						FROM (		
							SELECT  d.id, 
								d.host_id, 
								d.quota_id, 
								d.quota_name, 
								CASE 
									WHEN t.threshold_type = 1 THEN d.quota_value
									WHEN t.threshold_type = 2 THEN (d.quota_value - d.last_quota_value )/(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_time))
									WHEN t.threshold_type = 3 THEN d.quota_value
								ELSE 0 END quota_value,
								d.last_quota_value, 
								d.gmt_created, 
								d.gmt_modifed,
								h.nick_name,
								h.ip_addr,
								t.quota_metric,
								t.warn_quota_value ,
								t.critical_quota_value,
								t.threshold_type
							FROM b_host_quota_collect_day d,b_host_config h,b_threshold t
							WHERE d.host_id = h.host_id AND h.host_id = t.monitor_id 
							AND t.config_type = 1 AND d.quota_id = t.quota_id 
						<![CDATA[ 	AND d.is_completed = 'N' AND t.status = '0' AND d.last_quota_value >= 0 ]]>
							) t 
					) t1  WHERE t1.warn_flag = 0 and critical_flag = 0 				  		
	  	) AND is_completed = 'N'
  
  </update>
  
  
  <select id="list_host_monitor_uncompleted_limit_id" resultMap="BaseIdMap">
  		select his.id from b_host_quota_collect_day his 
			where his.is_completed = 'N' 
				AND his.gmt_created > DATE_ADD(now(),INTERVAL -1 DAY)
			order by his.gmt_created limit 1000	
  </select>
  
  <select id="get_host_monitor_uncompleted_obj" parameterType="java.lang.String" resultMap="listUncompletedDiskObject">
	  	SELECT  d.id, 
				d.host_id, 
				d.quota_id, 
				d.quota_name, 
				CASE 
					WHEN t.threshold_type = 1 THEN d.quota_value
					WHEN t.threshold_type = 2 THEN (d.quota_value - d.last_quota_value )/(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_time))
					WHEN t.threshold_type = 3 THEN d.quota_value
				ELSE 0 END quota_value,
				d.last_quota_value, 
				d.gmt_created, 
				d.gmt_modifed,
				h.nick_name,
				h.ip_addr,
				t.quota_metric,
				t.warn_quota_value ,
				t.critical_quota_value,
				t.threshold_type
			FROM b_host_quota_collect_day d,b_host_config h,b_threshold t
			WHERE d.host_id = h.host_id AND h.host_id = t.monitor_id 
			AND t.config_type = 1 AND d.quota_id = t.quota_id 
		<![CDATA[ 	AND d.is_completed = 'N' AND t.status = '0' AND d.last_quota_value >= 0 ]]>
			and d.id = #{id}
  </select>
  
  <update id="close_uncompleted_quota_collect_data_by_id" parameterType="java.lang.String">
  	update b_host_quota_collect_day SET is_completed = 'Y' where id = #{id}
  </update>
  
  
  <delete id="del_his_data" parameterType="java.util.Map">
  	delete from b_host_quota_collect_day where gmt_created  <![CDATA[ <  ]]>  str_to_date(#{gmtCreatedDate},'%Y-%m-%d')
  </delete>
  
  <select id="list_report_data" parameterType="java.util.Map" resultMap="listReportResultMap">
  	select * from (
  	SELECT 
		ROUND(CASE 
		    WHEN m.cal_type = 2 THEN (d.quota_value - d.last_quota_value) /(UNIX_TIMESTAMP(d.gmt_created)- UNIX_TIMESTAMP(d.last_quota_time))
		ELSE d.quota_value END,2) quota_value,
		UNIX_TIMESTAMP(DATE_FORMAT(d.gmt_created,'%Y-%m-%d %H:%i'))  gmt_created,
		d.id
	 FROM b_host_quota_collect_day d, b_quota_model m
	WHERE d.quota_id = m.id 
		AND d.quota_id= #{quotaId} 
		AND d.host_id=#{hostId} 
	<![CDATA[	and d.last_quota_value >= 0 ]]>
	<if test="startDate != null and startDate!='' ">
		and d.gmt_created >= str_to_date(#{startDate},'%Y-%m-%d %H:%i:%s') 
	</if>
	<if test="endDate != null and endDate!='' ">
	<![CDATA[		and d.gmt_created <= str_to_date(#{endDate},'%Y-%m-%d %H:%i:%s') ]]>
	</if>
	
	ORDER BY gmt_created desc LIMIT ${pageSize} ) x order by gmt_created asc
  </select>
  
  
  <update id="close_no_threshold_task">
  	UPDATE b_host_quota_collect_day SET is_completed = 'Y' WHERE id IN (
		SELECT id FROM (
			SELECT * FROM b_host_quota_collect_day d WHERE NOT EXISTS (
				SELECT 1 FROM b_threshold t  WHERE t.quota_id = d.quota_id AND t.monitor_id = d.host_id AND t.config_type=1
		) AND is_completed = 'N' LIMIT 100000) t 
	)
  </update>
  
  
</mapper>